<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:smtk="http://java.sun.com/jsf/composite/smtk"
      xmlns:p="http://primefaces.org/ui">

<composite:interface>
    <composite:attribute name="relationshipDefinition" type="cl.minsal.semantikos.model.relationships.RelationshipDefinition" />
    <composite:attribute name="targetDefinition" type="cl.minsal.semantikos.model.basictypes.BasicTypeDefinition" />
    <composite:attribute name="targets" type="java.util.List"/>
    <composite:attribute name="multiple" type="java.lang.Boolean"/>
</composite:interface>
<composite:implementation>

    <div class="ui-g-12 ui-md-6 ui-lg-2">
        <p:selectCheckboxMenu id="basicTypeMultipleSelection"
                              value="#{cc.attrs.targets}"
                              converter="omnifaces.SelectItemsConverter"
                              label="#{cc.attrs.relationshipDefinition.name}"
                              filter="true"
                              filterMatchMode="startsWith"
                              style="margin-right:10px; width: 70%"
                              rendered="#{cc.attrs.targetDefinition.discreteDomain and cc.attrs.multiple }">
            <p:ajax event="change"
                    update="@(.conceptFilters)"
                    process="@this" />
            <f:selectItems value="#{cc.attrs.targetDefinition.domain}"
                           var="domain"
                           itemLabel="#{domain}"
                           itemValue="#{domain}"/>
        </p:selectCheckboxMenu>

        <p:selectOneMenu id="basicTypeSimpleSelection"
                         value="#{conceptBrowserBean.basicTypeValue.value}"
                         label="#{cc.attrs.relationshipDefinition.name}"
                         var="selection"
                         converter="omnifaces.SelectItemsConverter"
                         autoWidth="false"
                         style="margin-right:10px; width: 60%"
                         rendered="#{cc.attrs.targetDefinition.discreteDomain and cc.attrs.targets.isEmpty() and not cc.attrs.multiple }">

            <p:ajax event="itemSelect"
                    listener="#{conceptBrowserBean.setSimpleSelection(cc.attrs.relationshipDefinition, conceptBrowserBean.basicTypeValue)}"
                    update="@(.conceptFilters)"
                    process="@this" />


            <f:selectItem itemLabel="#{cc.attrs.relationshipDefinition.name}"
                          itemValue="#{ null }"
                          noSelectionOption="true"
            />

            <f:selectItems value="#{cc.attrs.targetDefinition.domain}"
                           var="domain"
                           itemLabel="#{domain}"
                           itemValue="#{domain}"/>
        </p:selectOneMenu>

        <p:repeat  value="#{cc.attrs.targets}"
                   offset="0"
                   size="#{cc.attrs.targets.size()}"
                   step="1"
                   var="target"
                   varStatus="var">

            <p:selectOneMenu id="basicTypeSimpleSelection2"
                             value="#{target.value}"
                             label="#{cc.attrs.relationshipDefinition.name}"
                             var="selection"
                             converter="omnifaces.SelectItemsConverter"
                             style="margin-right:10px; width: 70%"
                             rendered="#{cc.attrs.targetDefinition.discreteDomain and not cc.attrs.targets.isEmpty() and not cc.attrs.multiple }">

                <p:ajax event="itemSelect"
                        listener="#{conceptBrowserBean.setSimpleSelection(cc.attrs.relationshipDefinition, target)}"
                        update="@(.conceptFilters)"
                        process="@this" />

                <f:selectItem itemLabel="#{cc.attrs.relationshipDefinition.name}"
                              itemValue="#{ null }"
                              noSelectionOption="true"
                />
                <f:selectItems value="#{cc.attrs.targetDefinition.domain}"
                               var="domain"
                               itemLabel="#{domain}"
                               itemValue="#{domain}"/>
            </p:selectOneMenu>
        </p:repeat>
    </div>

    <h:outputStylesheet id="customCSS">
        .ui-selectonemenu .ui-selectonemenu-label {
            overflow: visible;
        }
    </h:outputStylesheet>


</composite:implementation>
</html>
