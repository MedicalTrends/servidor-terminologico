package cl.minsal.semantikos.designer;

import cl.minsal.semantikos.concept.ConceptBean;
import cl.minsal.semantikos.model.ConceptSMTK;
import cl.minsal.semantikos.model.basictypes.BasicTypeValue;
import cl.minsal.semantikos.model.helpertables.HelperTableRow;
import cl.minsal.semantikos.model.relationships.*;
import cl.minsal.semantikos.modelweb.ConceptSMTKWeb;
import cl.minsal.semantikos.modelweb.RelationshipDefinitionWeb;
import cl.minsal.semantikos.modelweb.RelationshipWeb;
import cl.minsal.semantikos.util.StringUtils;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import java.util.Collections;
import java.util.List;

/**
 * Created by des01c7 on 14-10-16.
 */

public class AutogenerateBean {

    private static String autogeneratedTerm;

    public static void load(ConceptSMTKWeb concept, List<RelationshipDefinitionWeb> relationshipDefinitions) {
        String separator = "";
        autogeneratedTerm = "";
        // Se asume que las definiciones est√°n ordenadas de acuerdo a negocio
        for (RelationshipDefinitionWeb relationshipDefinition : relationshipDefinitions) {
            if(relationshipDefinition.isAutogenerate()) {
                List<RelationshipWeb> autogenerableRelationships = concept.getValidRelationshipsWebByRelationDefinition(relationshipDefinition);
                if (!autogenerableRelationships.isEmpty()) {
                    if (relationshipDefinition.getTargetDefinition().isHelperTable() || relationshipDefinition.getTargetDefinition().isBasicType()) {
                        separator = " ";
                    } else {
                        if(relationshipDefinition.isMCCE()) {
                            separator = " ";
                        }
                        else {
                            separator = " + ";
                        }
                    }
                }
                Collections.sort(autogenerableRelationships);
                for (Relationship relationship : autogenerableRelationships) {
                    autogeneratedTerm = autogeneratedTerm + separator + autogenerate(relationship);
                }
            }
        }
        if(!autogeneratedTerm.isEmpty()) {
            autogeneratedTerm = StringUtils.normalizeSpaces(autogeneratedTerm).trim();
            if(autogeneratedTerm.charAt(0) == '+') {
                autogeneratedTerm = autogeneratedTerm.substring(1).trim();
            }
        }
        concept.getValidDescriptionFavorite().setTerm(autogeneratedTerm);
        concept.getValidDescriptionFSN().setTerm(autogeneratedTerm);
    }

    public static String autogenerate(Relationship relationship) {

        String autogeneratedTerm = "";

        if(relationship.getRelationshipDefinition().getTargetDefinition().isSMTKType()) {

            ConceptSMTK concept = (ConceptSMTK) relationship.getTarget();

            if(!relationship.getRelationshipDefinition().isMCCE()) {
                autogeneratedTerm = concept.getDescriptionFavorite().getTerm();
            }

            if(!relationship.getRelationshipAttributes().isEmpty()) {
                autogeneratedTerm = autogeneratedTerm + " ";
            }

            autogeneratedTerm = autogeneratedTerm + autogenerateAttributes(relationship);
        }

        if(relationship.getRelationshipDefinition().getTargetDefinition().isHelperTable()) {
            HelperTableRow helperTableRow = (HelperTableRow) relationship.getTarget();
            autogeneratedTerm = helperTableRow.getDescription();
        }

        if(relationship.getRelationshipDefinition().getTargetDefinition().isBasicType()) {
            autogeneratedTerm = relationship.getTarget().toString();

            if(!relationship.getRelationshipAttributes().isEmpty()) {
                autogeneratedTerm = autogeneratedTerm + " ";
            }

            autogeneratedTerm = autogeneratedTerm + autogenerateAttributes(relationship);
        }

        return autogeneratedTerm;

    }

    public static String autogenerateAttributes(Relationship relationship) {

        String autogeneratedTerm = "";

        for (RelationshipAttribute relationshipAttribute : relationship.getRelationshipAttributes()) {

            if(relationshipAttribute.getRelationAttributeDefinition().isOrderAttribute()) {
                continue;
            }

            if(relationshipAttribute.getRelationAttributeDefinition().isUnidadPotenciaAttribute() ||
                    relationshipAttribute.getRelationAttributeDefinition().isUnidadPPAttribute() ||
                    relationshipAttribute.getRelationAttributeDefinition().isUnidadAttribute() ||
                    relationshipAttribute.getRelationAttributeDefinition().isUnidadPackMultiAttribute() ||
                    relationshipAttribute.getRelationAttributeDefinition().isUnidadVolumenTotalAttribute()) {

                HelperTableRow helperTableRow = (HelperTableRow) relationshipAttribute.getTarget();
                autogeneratedTerm = autogeneratedTerm + helperTableRow.getCellByColumnName("descripcion abreviada").getStringValue() + " ";

                if(relationshipAttribute.getRelationAttributeDefinition().isUnidadPotenciaAttribute()) {
                    autogeneratedTerm = autogeneratedTerm + " / ";
                }
            }
            else {
                autogeneratedTerm = autogeneratedTerm + relationshipAttribute.getTarget().toString() + " ";
            }
        }

        return autogeneratedTerm;
    }

}
