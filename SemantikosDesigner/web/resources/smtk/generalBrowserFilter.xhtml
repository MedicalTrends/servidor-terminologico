<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:composite="http://java.sun.com/jsf/composite"
      xmlns:smtk="http://java.sun.com/jsf/composite/smtk"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions" xmlns:c="http://java.sun.com/jsp/jstl/core"
>

<composite:interface>
    <composite:attribute name="generalQuery" type="cl.minsal.semantikos.model.queries.GeneralQuery" />
</composite:interface>
<composite:implementation>

    <p:outputPanel id="browserFilters" styleClass="browserFilters">

        <div class="ui-fluid">
            <div class="Container">
                <div class="Container100">
                    <div class="ContainerIndent BoldGray FontBold">
                        <span>
                            Patr√≥n
                        </span>
                        <p:outputPanel styleClass="search">
                            <p:inputText value="#{cc.attrs.generalQuery.query}" placeholder="Buscar..." onkeyup="return (this.value.length >= 3 || this.value.length ==0)">
                                <p:ajax event="keyup" delay="500" update="@(.browserTable)" process="@this" listener="#{generalBrowserBean.setFilterChanged(true)}" />
                            </p:inputText>
                            <i class="fa fa-search fa-lg" />
                        </p:outputPanel>
                    </div>
                </div>

                <div class="Container100">
                    <div class="ContainerIndent BoldGray FontBold">
                        <span>
                            Revisar
                        </span>
                        <p:selectOneMenu value="#{cc.attrs.generalQuery.toBeReviewed}" autoWidth="false">
                            <f:selectItem itemLabel="Seleccione..." itemValue="#{null}"/>
                            <f:selectItem itemLabel="Sin Revisar" itemValue="false"/>
                            <f:selectItem itemLabel="Revisar" itemValue="true"/>
                            <p:ajax event="itemSelect" update="@(.browserTable),@(.filterStatus)" listener="#{generalBrowserBean.setFilterChanged(true)}" process="@this" />
                        </p:selectOneMenu>
                    </div>
                </div>

                <div class="Container100">
                    <div class="ContainerIndent BoldGray FontBold">
                        <span>
                            Consultar
                        </span>
                        <p:selectOneMenu value="#{cc.attrs.generalQuery.toBeConsulted}" autoWidth="false">
                            <f:selectItem itemLabel="Seleccione..." itemValue="#{null}"/>
                            <f:selectItem itemLabel="Sin Consultar" itemValue="false"/>
                            <f:selectItem itemLabel="Consultar" itemValue="true"/>
                            <p:ajax event="itemSelect" update="@(.browserTable),@(.filterStatus)" listener="#{generalBrowserBean.setFilterChanged(true)}" process="@this" />
                        </p:selectOneMenu>
                    </div>
                </div>

                <div class="Container100">
                    <div class="ContainerIndent BoldGray FontBold">
                        <span>
                            Estado
                        </span>
                        <p:selectOneMenu value="#{cc.attrs.generalQuery.modeled}" autoWidth="false">
                            <f:selectItem itemLabel="Seleccione..." itemValue="#{null}"/>
                            <f:selectItem itemLabel="Borrador" itemValue="false"/>
                            <f:selectItem itemLabel="Modelado" itemValue="true"/>
                            <p:ajax event="itemSelect" update="@(.browserTable),@(.filterStatus)" listener="#{generalBrowserBean.setFilterChanged(true)}" process="@this" />
                        </p:selectOneMenu>
                    </div>
                </div>

                <div class="Container100">
                    <div class="ContainerIndent BoldGray FontBold">
                        <span>
                            Etiquetas
                        </span>
                        <p:selectCheckboxMenu id="tags"
                                              value="#{cc.attrs.generalQuery.tags}"
                                              converter="omnifaces.SelectItemsConverter"
                                              label="Seleccione..."
                                              autoWidth="false"
                                              filter="true"
                                              filterMatchMode="startsWith">
                            <p:ajax event="change"
                                    listener="#{generalBrowserBean.setFilterChanged(true)}"
                                    update="@(.browserTable),@(.filterStatus)"
                                    process="@this" />
                            <p:ajax event="toggleSelect" update="@(.browserTable),@(.filterStatus)" listener="#{generalBrowserBean.setFilterChanged(true)}" />

                            <f:selectItems value="#{generalBrowserBean.tags}" var="tag"
                                           itemLabel="#{tag.name}" itemValue="#{tag}"/>
                        </p:selectCheckboxMenu>
                    </div>
                </div>

                <p:repeat
                        offset="0"
                        size="#{cc.attrs.generalQuery.filters.size()}"
                        step="1"
                        varStatus="var"
                        value="#{cc.attrs.generalQuery.filters}"
                        var="filter">

                    <smtk:basicTypeFilter relationshipDefinition="#{filter.definition}"
                                          targetDefinition="#{filter.definition.targetDefinition}"
                                          targets="#{filter.targets}"
                                          multiple="#{filter.multiple}"
                                          rendered="#{filter.definition.targetDefinition.basicType}" />

                    <smtk:helperTableTypeFilter
                            relationshipDefinition="#{filter.definition}"
                            targetDefinition="#{filter.definition.targetDefinition}"
                            targets="#{filter.targets}"
                            rendered="#{filter.definition.targetDefinition.helperTable and not filter.multiple }" />

                    <smtk:helperTableTypeFilterListBox
                            relationshipDefinition="#{filter.definition}"
                            targetDefinition="#{filter.definition.targetDefinition}"
                            targets="#{filter.targets}"
                            rendered="#{filter.definition.targetDefinition.helperTable and not filter.multiple and filter.composite eq 11 }" />

                    <smtk:smtkTypeFilter relationshipDefinition="#{filter.definition}"
                                         targetDefinition="#{filter.definition.targetDefinition}"
                                         targets="#{filter.targets}"
                                         multiple="#{filter.multiple}"
                                         rendered="#{filter.definition.targetDefinition.SMTKType}" />

                </p:repeat>

                <p:repeat
                        offset="0"
                        size="#{cc.attrs.generalQuery.attributeFilters.size()}"
                        step="1"
                        varStatus="var"
                        value="#{cc.attrs.generalQuery.attributeFilters}"
                        var="attributeFilter">

                    <smtk:helperTableTypeAttributeFilter
                            relationshipAttributeDefinition="#{attributeFilter.definition}"
                            targetDefinition="#{attributeFilter.definition.targetDefinition}"
                            targets="#{attributeFilter.targets}"
                            rendered="#{attributeFilter.definition.targetDefinition.helperTable and not attributeFilter.multiple}" />

                </p:repeat>

                <smtk:DateTypeFilter date="#{cc.attrs.generalQuery.creationDateSince}" name="Ingresados Desde"
                                     dateSince="#{true}"
                                     rendered="#{cc.attrs.generalQuery.customFilterable}" />
                <smtk:DateTypeFilter date="#{cc.attrs.generalQuery.creationDateTo}" name="Ingresados Hasta"
                                     dateSince="#{false}"
                                     rendered="#{cc.attrs.generalQuery.customFilterable}" />
                <smtk:userTypeFilter user="#{cc.attrs.generalQuery.user}" name="Usuario"
                                     rendered="#{cc.attrs.generalQuery.customFilterable}" />

            </div>
        </div>

        <p:outputPanel styleClass="filterStatus">

        </p:outputPanel>

    </p:outputPanel>

</composite:implementation>
</html>