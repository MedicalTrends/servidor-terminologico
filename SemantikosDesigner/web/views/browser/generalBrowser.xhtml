<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:smtk="http://java.sun.com/jsf/composite/smtk"
                template="/WEB-INF/template.xhtml">

    <ui:define name="title">Semantikos Diseñador</ui:define>

    <ui:define name="content">

        <f:metadata>
            <f:viewParam name="idCategory" value="#{generalBrowserBean.idCategory}" />
            <f:event type="preRenderView" listener="#{generalBrowserBean.executeQuery}" />
        </f:metadata>

        <div class="ui-g dashboard">
            <div class="ui-g-12 ui-md-12 ui-lg-12">
                <h:form id="browserForm" prependId="false">

                    <p:breadCrumb id="top-menu">
                        <p:menuitem value="Inicio" url="/views/home.xhtml" styleClass="loader-trigger" />
                        <p:menuitem value="#{generalBrowserBean.category.name}" url="#" />
                    </p:breadCrumb>

                    <div class="card card-w-title">
                        <h1 class="first-heading" style="font-weight: 400; color: #212121;">#{generalBrowserBean.category.name}</h1>
                        <p:separator styleClass="heading-separator-alt"/>

                        <div class="ui-fluid ui-g">
                            <div class="ui-g-12 ui-md-6 ui-lg-6">

                                <p:outputPanel styleClass="search" style="width: 100%">

                                    <p:inputText value="#{generalBrowserBean.generalQuery.query}" placeholder="Buscar..." style="width: 100%"
                                                 onkeyup="return (this.value.length >= 3 || this.value.length == 0)">
                                        <p:ajax event="keyup" update="@(.browserTable),@(.search2)" process="@this" listener="#{generalBrowserBean.setFilterChanged(true)}" delay="500" />
                                    </p:inputText>

                                    <i class="fa fa-search fa-lg" />

                                </p:outputPanel>

                            </div>

                            <div class="ui-g-12 ui-md-6 ui-lg-6">
                                <p:commandButton icon="fa fa-plus" style="float: right;" title="Crear"
                                                 type="submit" process="browserForm" styleClass="loader-trigger"
                                                 actionListener="#{generalBrowserBean.createConcept}"
                                                 rendered="#{profilePermissionsBeans.permissionsBy(generalBrowserBean.category)}">
                                </p:commandButton>
                                <p:commandButton icon="fa fa-filter" styleClass="filter-btn" id="filter-btn" title="Filtrar"
                                                 onclick="listenOnClick();" style="float: right;">
                                </p:commandButton>
                                <p:commandButton ajax="false" icon="fa fa-file-excel-o" style="float: right;" title="Exportar" rendered="false">
                                    <p:dataExporter target="conceptTableExcel" type="xls" fileName="concepts" />
                                </p:commandButton>
                            </div>
                            <div class="ui-g-12 ui-md-12 ui-lg-12" style="padding-bottom: 0px">
                                <p:outputPanel styleClass="search2">
                                    <p:outputLabel id="summary" style="font-size: small; padding-left: 0.3em"
                                                   value="Página #{generalBrowserBean.page} de #{generalBrowserBean.results} conceptos"/>
                                    <p:remoteCommand name="onload" update="summary"
                                                     autoRun="true" />
                                </p:outputPanel>
                            </div>
                        </div>
                    </div>

                    <p:outputPanel id="conceptPanel" styleClass="conceptPanel">

                        <p:dataTable id="browserTable"
                                     multiViewState="true"
                                     widgetVar="conceptTable"
                                     styleClass="browserTable conceptTable"
                                     value="#{generalBrowserBean.concepts}"
                                     var="concept"
                                     rows="30"
                                     paginator="true" lazy="true" dynamic="true" reflow="false"
                                     paginatorTemplate=" {CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
                                     emptyMessage="No se han encontrado conceptos con los criterios utilizados">

                            <p:growl id="growl" showDetail="true" showSummary="true"/>

                            <p:ajax event="rowToggle" listener="#{generalBrowserBean.onRowToggle}" />

                            <p:ajax event="page" listener="#{generalBrowserBean.updatePage}" oncomplete="scrollTop();loader();" update="@(.search2)" />

                            <p:column headerText="Término Preferido">
                                <div class="ui-g dashboard">
                                    <div class="ui-g-12">
                                        <p:outputPanel styleClass="card overview #{ not concept.valid?'not-valid':''}">
                                            <div class="overview-content clearfix task-list">
                                                <span class="overview-title">
                                                    <p:link outcome="/views/concepts/conceptView" value="#{concept.descriptionFavorite.term} "
                                                            styleClass="myCustomLinkStyle loader-trigger">
                                                        <f:param name="conceptID" value="#{concept.conceptID}" />
                                                    </p:link>
                                                    <p:link rendered="#{concept.modeled}" outcome="/views/concepts/conceptView" title="Modelado"
                                                            styleClass="loader-trigger">
                                                        <i class="ui-icon ui-icon-public"/>
                                                        <f:param name="conceptID" value="#{concept.conceptID}" />
                                                    </p:link>
                                                    <p:link rendered="#{not concept.modeled}" outcome="/views/concepts/conceptView" title="Borrador"
                                                            styleClass="loader-trigger">
                                                        <i class="fa fa-edit" style="color: #5C5C5C"/>
                                                        <f:param name="conceptID" value="#{concept.conceptID}" />
                                                    </p:link>
                                                    <p:link rendered="#{not concept.valid}" outcome="/views/concepts/conceptView">
                                                        <i class="ui-icon ui-icon-block" title="No vigente" style="color: red" />
                                                        <f:param name="conceptID" value="#{concept.conceptID}" />
                                                    </p:link>
                                                </span>
                                                <span class="overview-badge">
                                                    <p:button outcome="/views/concepts/conceptView" icon="fa fa-search fa-lg" title="Consultar" style="padding: 5px"
                                                              styleClass="myCustomLinkStyle loader-trigger">
                                                        <f:param name="conceptID" value="#{concept.conceptID}" />
                                                    </p:button>

                                                    <p:button outcome="/views/concepts/conceptEdit" icon="fa fa-edit fa-lg" title="Editar" style="padding: 5px"
                                                              styleClass="myCustomLinkStyle loader-trigger">
                                                        <f:param name="idConcept" value="#{concept.id}" />
                                                    </p:button>

                                                    <p:commandButton rendered="#{concept.modeled and concept.valid}" icon="fa fa-exchange fa-lg" oncomplete="PF('dialogTC2-browser').show()"
                                                                     update="@(.browserTable),@(.conceptTranslate)" title="Trasladar" style="padding: 5px">
                                                        <f:setPropertyActionListener value="#{concept}" target="#{transferConceptBean.conceptSMTKSelected}" />
                                                    </p:commandButton>

                                                    <p:commandButton action="#{generalBrowserBean.deleteConcept(concept)}"
                                                                     ajax="true" icon="fa fa-trash fa-lg"
                                                                     process="@this"
                                                                     rendered="#{not concept.modeled and profilePermissionsBeans.permissionsBy(generalBrowserBean.category)}"
                                                                     update="@(.browserTable), growl" title="Eliminar" style="padding: 5px">
                                                        <p:confirm header="Confirmar Acción" message="¿Desea eliminar este concepto?" icon="ui-icon-alert"/>
                                                    </p:commandButton>
                                                </span>

                                                <span class="overview-detail">
                                                    <h:outputText value="#{concept.conceptID}" style="font-size: small; color: #006621" />
                                                    <br/>
                                                    <h:outputText value="#{concept.category.name}" style="font-size: small; color:#545454;" />
                                                    <br/>

                                                    <p:outputPanel rendered="#{not empty generalBrowserBean.generalQuery.getShowableColumnsByConcept(concept)}">
                                                        <p:separator style="border-top: 0px solid rgb(219, 219, 219)"/>
                                                        <div class="ui-fluid ui-g">
                                                            <p:repeat value="#{generalBrowserBean.generalQuery.getShowableColumnsByConcept(concept)}" var="column">
                                                                <div class="ui-g-12 ui-md-4 ui-lg-2">
                                                                    <i class="fa fa-list" style="font-size: small"/>
                                                                    <h:outputText value=" #{column.relationshipDefinition.name}" style="font-weight: bold; font-size: small; color:#545454;" />
                                                                </div>
                                                                <div class="ui-g-12 ui-md-8 ui-lg-10">
                                                                    <p:outputPanel>
                                                                    <smtk:basicTypeCell basicTypeDefinition="#{column.relationshipDefinition.targetDefinition}" relationshipDefinition="#{column.relationshipDefinition}" concept="#{concept}" rendered="#{column.relationshipDefinition.targetDefinition.basicType}" />
                                                                    <smtk:helperTableTypeCell relationshipDefinition="#{column.relationshipDefinition}" concept="#{concept}" rendered="#{column.relationshipDefinition.targetDefinition.helperTable}" />
                                                                    <smtk:smtkTypeCell relationshipDefinition="#{column.relationshipDefinition}" concept="#{concept}" rendered="#{column.relationshipDefinition.targetDefinition.SMTKType}" />
                                                                </p:outputPanel>
                                                                </div>
                                                            </p:repeat>
                                                        </div>
                                                        <h:dataTable value="#{generalBrowserBean.generalQuery.getShowableColumnsByConcept(concept)}"
                                                                     var="column" rendered="false"
                                                                     columnIndexVar="colIndex">
                                                            <h:column>
                                                                <i class="fa fa-list" style="font-size: small"/>
                                                                <h:outputText value=" #{column.relationshipDefinition.name}" style="font-weight: bold; font-size: small; color:#545454;" />
                                                            </h:column>
                                                            <h:column>
                                                                <p:outputPanel>
                                                                    <smtk:basicTypeCell basicTypeDefinition="#{column.relationshipDefinition.targetDefinition}" relationshipDefinition="#{column.relationshipDefinition}" concept="#{concept}" rendered="#{column.relationshipDefinition.targetDefinition.basicType}" />
                                                                    <smtk:helperTableTypeCell relationshipDefinition="#{column.relationshipDefinition}" concept="#{concept}" rendered="#{column.relationshipDefinition.targetDefinition.helperTable}" />
                                                                    <smtk:smtkTypeCell relationshipDefinition="#{column.relationshipDefinition}" concept="#{concept}" rendered="#{column.relationshipDefinition.targetDefinition.SMTKType}" />
                                                                </p:outputPanel>
                                                            </h:column>
                                                        </h:dataTable>
                                                    </p:outputPanel>

                                                    <p:separator style="border-top: 0px solid rgb(219, 219, 219)" rendered="#{ not empty concept.tags or concept.observation != ''}"/>

                                                     <p:outputPanel rendered="#{ not empty concept.tags}">
                                                        <i class="fa fa-tags" style="font-size: small"/>
                                                        <p:repeat
                                                                offset="0"
                                                                size="#{concept.tags.size()}"
                                                                step="1"
                                                                varStatus="var"
                                                                value="#{concept.tags}"
                                                                var="tag">

                                                            <h:outputText value=" #{tag}" style="font-size: small; background-color: ##{tag.colorBackground}; color:##{tag.colorLetter}; border: 1px" styleClass="BorderAll SoftGrayBack LeadenGreen"  />
                                                            <h:outputText value=", " style="font-size: small; color: #545454"/>

                                                        </p:repeat>
                                                    </p:outputPanel>

                                                    <p:outputPanel rendered="#{concept.observation != ''}">
                                                        <i class="ui-icon ui-icon-comment" style="font-size: small"/>
                                                        <h:outputText value=" #{concept.observation}" style="font-size: small; color: #545454"/>
                                                    </p:outputPanel>
                                                </span>
                                            </div>
                                        </p:outputPanel>
                                    </div>
                                </div>
                            </p:column>

                        </p:dataTable>

                    </p:outputPanel>

                    <p:growl id="msgTransfer" showDetail="true" showSummary="true"/>

                    <!-- Diálogo para buscar la categoría y aceptar -->
                    <p:dialog id="dialogTC2-browser" header="Trasladar concepto" widgetVar="dialogTC2-browser" showEffect="fade" hideEffect="fade">

                        <p:panel id="conceptTranslate" styleClass="conceptTranslate" style="width: 100%; border: hidden;">
                            <h3>Trasladar Concepto a...</h3>
                            <div class="ui-fluid ui-g">

                                <div class="ui-g-12 ui-md-6 ui-lg-2">
                                    <p:outputLabel id="categoryLabel" for="categoryMenu" value="Categoría propuesta"/>
                                </div>

                                <div class="ui-g-12 ui-md-6 ui-lg-10">
                                    <p:selectOneMenu id="categoryMenu" value="#{transferConceptBean.targetCategory}" converter="CategoryConverter" required="true">
                                        <f:selectItems value="#{beanCategory.categories}" var="category" itemValue="#{category}"
                                                       itemLabel="#{category.name}"/>
                                    </p:selectOneMenu>
                                </div>

                                <div class="ui-g-12 ui-md-6 ui-lg-2">
                                    <p:outputLabel value="Concepto:" />
                                </div>

                                <div class="ui-g-12 ui-md-6 ui-lg-10">
                                    <p:outputLabel value="#{transferConceptBean.conceptSMTKSelected.descriptionFavorite} - #{transferConceptBean.conceptSMTKSelected.conceptID}"/>
                                </div>

                                <div class="ui-g-12 ui-md-12 ui-lg-12">
                                    <p:commandButton value="Trasladar" actionListener="#{transferConceptBean.transferConcept(transferConceptBean.conceptSMTKSelected)}"
                                                     style="float: right; width: auto"
                                                     icon="fa fa-exchange" styleClass="ui-priority-primary" update="msgTransfer" >
                                        <p:confirm header="Confirmación" message="¿Desea realmente trasladar este concepto?"
                                                   icon="ui-icon-alert"/>
                                    </p:commandButton>
                                </div>

                            </div>
                        </p:panel>
                    </p:dialog>

                    <p:confirmDialog global="true" showEffect="fade" hideEffect="fade">
                        <p:commandButton value="Si" type="button" styleClass="ui-confirmdialog-yes"
                                         icon="ui-icon-check"/>
                        <p:commandButton value="No" type="button" styleClass="ui-confirmdialog-no"
                                         icon="ui-icon-close"/>
                    </p:confirmDialog>

                </h:form>
            </div>
            <div class="ui-g-12 ui-md-4 ui-lg-3">

            </div>
        </div>

        <script type="text/javascript">

            function listenOnClick() {
                $('.rightpanel-btn').trigger('click');
            }

            var offSet = 0;

            var x = window.matchMedia("(max-width: 700px)")
            myFunction(x) // Call listener function at run time
            x.addListener(myFunction) // Attach listener function on state changes

            function myFunction(x) {
                if (x.matches) { // If media query matches
                    offSet = ($('#browserForm').first().offset().top) - 60;
                } else {
                    offSet = 0;
                }
            }

            $(function() {
                // Set window scroll position if cookie is set.
                window.scroll(0, $.cookie('myCookie'));
                // Unset cookie after setting scroll position.
                $.removeCookie('myCookie');
                listenPageOnClickEvent();
                listenSearchOnClickEvent();
                listenSearchOnFocusEvent();
                mark();
            });

            $(document).ready(function() {
                $('.ui-paginator-next, .ui-paginator-last, .ui-paginator-prev, .ui-paginator-first').on('click', function() {
                    $.Toast.showToast({
                        // toast message
                        "title": "Un momento por favor...",
                        // "success", "none", "error"
                        "icon": "Cargando",
                        // default: 1500
                        "duration": 10000
                    });
                });
            });

            function scrollTop() {
                setTimeout(
                        function() {
                            window.scroll(0, 0);
                            listenPageOnClickEvent();
                        }, 0);

                $.Toast.hideToast();

            }

            // This function simply gets the window scroll position, works in all browsers.
            function getPageScroll() {
                var yScroll;
                if (self.pageYOffset) {
                    yScroll = self.pageYOffset;
                }
                else if (document.body) {
                    yScroll = document.body.scrollTop;
                }
                return yScroll;
            }

            function listenPageOnClickEvent() {
                // Make this class objects keep page scroll position.
                $('.myCustomLinkStyle').each(function() {
                    $(this).on('click', function() {
                        $.cookie('myCookie', getPageScroll());
                    });
                });


            }

            function listenSearchOnClickEvent() {
                $('.search-button-tiny').on("click", function () {
                    if ($('input[id$=search_hinput]').val().length >= 3) {
                        $('span[id$=search_panel] .ui-autocomplete-item:first-child').trigger('click');
                    }
                    else {
                        return false;
                    }
                });
            }

            function listenOnClick() {
                $('.rightpanel-btn').trigger('click');
            }

            function listenSearchOnFocusEvent() {
                $('input[id$=search_input]').on("focus", function () {
                    $('html, body').animate({
                        scrollTop: offSet
                    }, 0);
                });
                $('input[id$=search_input]').on("blur", function () {
                    $('html, body').animate({
                        scrollTop: 0
                    }, 0);
                });
            }

            function initLoader() {
                //$('.loader').css("display","inline");
                //$('.search .fa').hide();
            }

            function haltLoader() {
                //$('.loader').css("display","none");
                //$('.search .fa').show();
            }

            function mark() {

                // Read the keyword
                var keyword =  $('input[id$=search_input]').val();

                // Determine selected options
                var options = {};
                $("input[name='opt[]']").each(function() {
                    options[$(this).val()] = $(this).is(":checked");
                });

                // Remove previous marked elements and mark
                // the new keyword inside the context
                $(".context").unmark({
                    done: function() {
                        $(".context").mark(keyword, options);
                    }
                });

                $("input[name='keyword']").on("input", mark);
                $("input[type='checkbox']").on("change", mark);

            }

            function focus() {
                $('.context').first().focus();
            }

            function focus2() {
                $('input[id$=search_input]').focus();
            }

        </script>

    </ui:define>

</ui:composition>