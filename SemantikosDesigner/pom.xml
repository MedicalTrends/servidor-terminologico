<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cl.minsal.semantikos</groupId>
    <artifactId>SemantikosDesigner</artifactId>
    <version>1.8</version>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    <parent>
        <groupId>cl.minsal.semantikos</groupId>
        <artifactId>Semantikos</artifactId>
        <version>1.8</version>
    </parent>

    <dependencies>

        <!-- Import the transaction spec API, we use runtime scope because
    we aren't using any direct reference to the spec API in our client code -->
        <!--dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <scope>runtime</scope>
        </dependency-->

        <!-- Import the EJB API, we use runtime scope because we aren't using
            any direct reference to EJB spec API in our client code -->
        <!--dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>runtime</scope>
        </dependency-->


        <!-- dependencia del runtime de jboss que incluye jee, ejb, jsf y mucho mas -->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>1.0.1.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>cl.minsal.semantikos</groupId>
            <artifactId>SemantikosDomain</artifactId>
            <version>1.8</version>
            <type>jar</type>
        </dependency>

        <!-- Import the transaction spec API, we use runtime scope because we aren't using any direct
       reference to the spec API in our client code -->
        <!--dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.1_spec</artifactId>
            <version>LATEST</version>
            <scope>runtime</scope>
        </dependency-->

        <!-- Import the EJB 3.1 API, we use runtime scope because we aren't using any direct
         reference to EJB spec API in our client code -->
        <!--dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <version>LATEST</version>
            <scope>runtime</scope>
        </dependency-->

        <!-- We depend on the EJB remote business interfaces  of this application -->
        <!--dependency>
            <groupId>cl.minsal.semantikos</groupId>
            <artifactId>SemantikosKernelEJB</artifactId>
            <type>ejb-client</type>
            <version>1.6</version>
        </dependency-->

        <!-- JBoss EJB client API jar. We use runtime scope because the EJB client API
       isn't directly used in this example. We just need it in our runtime classpath -->
        <!--dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
            <version>LATEST</version>
        </dependency-->

        <!-- client communications with the server use XNIO -->
        <!--dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-api</artifactId>
            <version>LATEST</version>
            <scope>runtime</scope>
        </dependency-->

        <!--dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-nio</artifactId>
            <version>LATEST</version>
            <scope>runtime</scope>
        </dependency-->

        <!-- The client needs JBoss remoting to access the server -->
        <!--<dependency>-->
        <!--<groupId>org.jboss.remoting3</groupId>-->
        <!--<artifactId>jboss-remoting</artifactId>-->
        <!--<scope>runtime</scope>-->
        <!--</dependency>-->

        <!--dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-remote-naming</artifactId>
            <version>1.0.0.Final</version>
            <scope>compile</scope>
        </dependency-->

        <!-- Remote EJB accesses can be secured -->
        <!--dependency>
            <groupId>org.jboss.sasl</groupId>
            <artifactId>jboss-sasl</artifactId>
            <version>LATEST</version>
            <scope>runtime</scope>
        </dependency-->

        <!-- data serialization for invoking remote EJBs -->
        <!--dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <version>LATEST</version>
            <scope>runtime</scope>
        </dependency-->

        <!-- dependencias no necesarias dado que se incluye el runtime de jboss -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Implementación JSF provista por EAP -->
        <!--dependency>
            <groupId>javax.faces</groupId>
            <artifactId>javax.faces-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency-->

        <!-- Implementación JSF provista por TOMCAT -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.faces</artifactId>
            <version>2.2.18</version>
        </dependency>

        <!-- Soporte para CDI en Servelts (TOMCAT) -->
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet</artifactId>
            <version>2.3.5.Final</version>
            <!--scope>provided</scope-->
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <!--dependency>
            <groupId>cl.minsal.semantikos</groupId>
            <artifactId>SemantikosKernelEJB</artifactId>
            <version>1.6</version>
            <scope>provided</scope>
        </dependency-->

        <!--dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.59.0</version>
        </dependency-->

        <!-- http://mvnrepository.com/artifact/org.primefaces/primefaces -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>6.2</version>
        </dependency>

        <!--dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>rio</artifactId>
            <version>3.1.2</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.faces</artifactId>
                </exclusion>
            </exclusions>
        </dependency-->

        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>ultima</artifactId>
            <version>1.1.3</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.faces</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.21</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.omnifaces/omnifaces -->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>2.4</version><!--Version soportoe para weld (TOMCAT)-->
            <!--version>2.1</version--><!--EAP-->
        </dependency>

        <!-- for JSF 2.x -->
        <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-servlet</artifactId>
            <version>3.4.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-config-prettyfaces</artifactId>
            <version>3.4.1.Final</version>
        </dependency>

        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>primefaces-extensions</artifactId>
            <version>6.2.10</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.16</version>
        </dependency>

        <!-- Para importar archivos CSV -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.16</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-schemas</artifactId>
            <version>3.16</version>
        </dependency>

        <!-- Para subir archivos -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.1</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>


    </dependencies>

    <!-- para poner automaticamente estampa de version en footer -->
    <build>
        <sourceDirectory>src</sourceDirectory>

        <resources>
            <resource>
                <directory>resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <finalName>SemantikosWeb</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
                <version>2.3.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <webXml>web\WEB-INF\web.xml</webXml>
                    <warName>designer</warName>
                    <warSourceDirectory>web</warSourceDirectory>
                </configuration>
            </plugin>

        </plugins>

    </build>
</project>