<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions"
                template="/WEB-INF/template.xhtml">

    <ui:define name="content">

        <f:metadata>
            <f:event type="preRenderView" listener="#{browserBean.executeQuery}" />
        </f:metadata>

        <div class="ui-g">

            <div class="ui-g-12 ui-md-12 ui-lg-12" style="max-width: 1200px">

                <p:breadCrumb id="top-menu" rendered="true">
                    <p:menuitem value="Inicio" url="/" />
                    <p:menuitem value="Conceptos" url="#" />
                </p:breadCrumb>

                <h:form id="browserForm">

                    <div class="card card-w-title">

                        <div class="ui-fluid">

                            <div class="ui-g">

                                <!--p:panelGrid columns="3" columnClasses="ui-grid-col-6,ui-grid-col-3,ui-grid-col-3" layout="grid"
                                             styleClass="ui-panelgrid-blank form-group"-->

                                <div class="ui-g-12 ui-md-12 ui-lg-12">

                                    <div class="ui-inputgroup">

                                        <p:outputPanel styleClass="search" style="width: 100%">

                                            <p:autoComplete minQueryLength="3"
                                                            id="search"
                                                            emptyMessage="No se encontraron conceptos"
                                                            forceSelection="false"
                                                            size="5"
                                                            completeMethod="#{browserBean.searchSuggestedDescriptions}"
                                                            placeholder="Buscar..."
                                                            converter="DescriptionConverter"
                                                            var="description"
                                                            value="#{browserBean.descriptionSelected}"
                                                            itemLabel="#{description.getRepresentation()}"
                                                            itemValue="#{description}">

                                                <p:outputPanel rendered="false">

                                                    <p:column style="width: 500px;" rendered="#{description.getId() != -1}">
                                                        <h:outputText value="#{description.term}" />
                                                    </p:column>

                                                </p:outputPanel>

                                                <p:column style="width: 90%; float: left; border: 0px; padding: 0px 10px; margin-top: 6px" styleClass="context">
                                                    <h:outputText value="#{description.term}" style="font-weight: normal;" />
                                                </p:column>

                                                <p:column style="width: 90%; float: left; ; border: 0px; padding: 0px 10px; margin-bottom: 12px">
                                                    <h:outputText value="#{description.conceptSMTK.category.name}" style="font-size: small;" />
                                                </p:column>

                                                <p:column style="width: 90%; float: left; ; border: 0px;  padding: 0px 10px; margin-bottom: 10px" rendered="false">
                                                    <h:outputText value="#{description.descriptionType.name}" style="font-size: small;" />
                                                </p:column>

                                                <p:ajax event="itemSelect"
                                                        listener="#{browserBean.test()}"
                                                        update="@(.conceptPanel),@(.search)"
                                                        onsuccess="focus();"
                                                        oncomplete="mark();scrollTop();"
                                                        process="@this"/>

                                                <p:ajax event="query"
                                                        onstart="initLoader()"
                                                        oncomplete="haltLoader(); mark();"/>

                                            </p:autoComplete>

                                            <p:outputPanel rendered="#{browserBean.descriptionSelected eq null}">
                                                <i class="fa fa-search fa-lg" />
                                            </p:outputPanel>

                                            <p:commandLink process="@this" style="color: #aaa; line-height: 24px"
                                                           rendered="#{browserBean.descriptionSelected != null}"
                                                           update="@(.search)"
                                                           oncomplete="listenSearchOnClickEvent();listenSearchOnFocusEvent();focus2();"
                                                           action="#{browserBean.setDescriptionSelected(null)}">
                                                <i class="fa fa-close fa-lg" />
                                            </p:commandLink>

                                            <p:graphicImage library="semantikos" name="images/loader-pink.gif"
                                                            styleClass="loader" style="display: none" />

                                        </p:outputPanel>

                                        <p:commandButton styleClass="search-button-tiny" icon="fa fa-search"
                                                         style="bottom: 6px; width: 2.4em; height: 2.2em" />

                                    </div>

                                </div>

                                <div class="ui-g-0 ui-md-6 ui-lg-8" style="padding-left: 0px; padding-right: 0px"></div>

                                <div class="ui-g-12 ui-md-3 ui-lg-2">

                                    <p:commandButton value="Exportar" icon="fa fa-file-excel-o" ajax="false">
                                        <p:dataExporter target="conceptTableExcel" type="xls" fileName="concepts" />
                                    </p:commandButton>

                                </div>

                                <div class="ui-g-12 ui-md-3 ui-lg-2">

                                    <p:commandButton value="Filtrar" onclick="listenOnClick();" icon="fa fa-filter">
                                    </p:commandButton>

                                </div>

                                <!--/p:panelGrid-->

                            </div>

                        </div>

                        <p:outputPanel>

                            <p:panel id="filters" rendered="#{browserBean.showFilters}" styleClass="filtros">

                                <div class="ui-g">

                                    <div class="ui-g-12 ui-md-6 ui-lg-2">

                                        <p:outputLabel value="CategorÃ­as" />

                                    </div>

                                    <div class="ui-g-12 ui-md-6 ui-lg-4">

                                        <p:selectCheckboxMenu id="menu2"
                                                              converter="omnifaces.SelectItemsConverter"
                                                              value="#{browserBean.browserQuery.categories}"
                                                              label="Seleccione..."
                                                              filter="true" filterMatchMode="startsWith">
                                            <f:selectItems value="#{browserBean.categories}" var="category"
                                                           itemLabel="#{category.name}" itemValue="#{category}"/>
                                            <p:ajax event="toggleSelect" update="@(.conceptTable),@(.filterStatus)" listener="#{browserBean.setFilterChanged(true)}" />
                                            <p:ajax update="@(.conceptTable),@(.filterStatus)" listener="#{browserBean.setFilterChanged(true)}" />
                                        </p:selectCheckboxMenu>

                                    </div>

                                    <div class="ui-g-12 ui-md-6 ui-lg-2">

                                        <p:outputLabel value="Etiquetas" />

                                    </div>

                                    <div class="ui-g-12 ui-md-6 ui-lg-4">

                                        <p:selectCheckboxMenu id="tags2"
                                                              value="#{browserBean.browserQuery.tags}"
                                                              converter="omnifaces.SelectItemsConverter"
                                                              label="Seleccione..."
                                                              style="width: 95%"
                                                              filter="true"
                                                              filterMatchMode="startsWith">
                                            <p:ajax event="change" update="@(.conceptTable),@(.filterStatus)" listener="#{browserBean.setFilterChanged(true)}" />
                                            <p:ajax event="toggleSelect" update="@(.conceptTable),@(.filterStatus)" listener="#{browserBean.setFilterChanged(true)}" />

                                            <f:selectItems value="#{browserBean.tags}" var="tag"
                                                           itemLabel="#{tag.name}" itemValue="#{tag}"/>
                                        </p:selectCheckboxMenu>

                                    </div>

                                </div>

                            </p:panel>

                        </p:outputPanel>

                    </div>

                    <p:outputPanel id="conceptPanel" styleClass="conceptPanel">

                        <p:dataTable id="conceptTable" value="#{browserBean.concepts}" var="conceptSMTK" styleClass="conceptTable"
                                     widgetVar="conceptTable"
                                     rendered="#{not empty browserBean.concepts}"
                                     multiViewState="true"
                                     rows="15"
                                     paginator="true" lazy="true" dynamic="true"
                                     paginatorTemplate=" {CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
                                     emptyMessage="No se han encontrado conceptos con los criterios utilizados">

                            <p:ajax event="page" listener="#{browserBean.updatePage}" oncomplete="scrollTop(); mark();" update="@(.search)" />

                            <p:column headerText="Termino Preferido">
                                <div class="ui-g dashboard">
                                    <div class="ui-g-12">
                                        <div class="card overview">
                                            <div class="overview-content clearfix">
                                                    <span class="overview-title">
                                                        <p:link outcome="/views/concept" value="#{conceptSMTK.descriptionFavorite.term}" styleClass="myCustomLinkStyle context" >
                                                            <f:param name="conceptID" value="#{conceptSMTK.conceptID}" />
                                                        </p:link>
                                                    </span>
                                                    <span class="overview-detail">
                                                        <h:outputText value="#{conceptSMTK.conceptID}" style="font-size: small; color: #006621" />
                                                        <br/>
                                                        <h:outputText value="#{conceptSMTK.category.name}" style="font-size: small; color:#545454;" />

                                                        <p:separator style="border-top: 0px solid rgb(219, 219, 219)" rendered="#{ not empty conceptSMTK.tags }"/>

                                                         <p:outputPanel rendered="#{ not empty conceptSMTK.tags}">
                                                            <i class="fa fa-tags" style="font-size: small"/>
                                                            <p:repeat
                                                                    offset="0"
                                                                    size="#{conceptSMTK.tags.size()}"
                                                                    step="1"
                                                                    varStatus="var"
                                                                    value="#{conceptSMTK.tags}"
                                                                    var="tag">

                                                                <h:outputText value=" #{tag}" style="font-size: small; background-color: ##{tag.colorBackground}; color:##{tag.colorLetter}; border: 1px" styleClass="BorderAll SoftGrayBack LeadenGreen"  />
                                                                <h:outputText value=", " style="font-size: small; color: #545454"/>

                                                            </p:repeat>
                                                        </p:outputPanel>

                                                    </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </p:column>

                        </p:dataTable>

                        <p:dataTable id="conceptTableExcel" widgetVar="conceptTableExcel" value="#{browserBean.concepts}" var="conceptSMTK" styleClass="conceptTable"
                                     style="display: none"
                                     rows="15"
                                     paginator="true" lazy="true" dynamic="true"
                                     reflow="true"
                                     paginatorTemplate=" {CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {Exporters}"
                                     emptyMessage="No se han encontrado conceptos con los criterios utilizados">
                            <f:facet name="{Exporters}">
                                <p:commandButton ajax="false" value="Exportar a Excel" process="@this" update="@this"
                                                 icon="fa fa-file-excel-o">
                                    <p:dataExporter type="xls" target="conceptTable"
                                                    fileName="conceptos"/>
                                </p:commandButton>
                            </f:facet>

                            <p:column headerText="Concept ID">
                                <h:outputText value="#{conceptSMTK.conceptID}"/>
                            </p:column>

                            <p:column headerText="Termino Preferido">
                                <h:outputText value="#{conceptSMTK.descriptionFavorite.term}"/>
                            </p:column>

                            <p:column headerText="CategorÃ­a">
                                <h:outputText value="#{conceptSMTK.category.name}"/>
                            </p:column>

                            <p:column headerText="Etiquetas" styleClass="tags" exportable="false">

                                <p:repeat
                                        offset="0"
                                        size="#{conceptSMTK.tags.size()}"
                                        step="1"
                                        varStatus="var"
                                        value="#{conceptSMTK.tags}"
                                        var="tag">

                                    <h:outputText value="#{tag}" style="background-color: ##{tag.colorBackground}; color:##{tag.colorLetter}; border: 1px" styleClass="BorderAll SoftGrayBack LeadenGreen"  />
                                    <h:outputText value=", " rendered="#{conceptSMTK.tags.size() > 1}" />

                                </p:repeat>

                            </p:column>

                        </p:dataTable>

                    </p:outputPanel>

                </h:form>

                <div class="ui-g ui-fluid">

                    <div class="ui-g-12 ui-md-4 ui-lg-2">
                        <p:button outcome="home" value="Inicio" styleClass="cyan-btn ui-priority-primary" icon="fa fa-arrow-left"/>
                    </div>

                </div>

            </div>

        </div>

        <script type="text/javascript">

            var offSet = 0;

            var x = window.matchMedia("(max-width: 700px)")
            myFunction(x) // Call listener function at run time
            x.addListener(myFunction) // Attach listener function on state changes

            function myFunction(x) {
                if (x.matches) { // If media query matches
                    offSet = ($('#browserForm').first().offset().top) - 60;
                } else {
                    offSet = 0;
                }
            }

            $(function() {
                // Set window scroll position if cookie is set.
                window.scroll(0, $.cookie('myCookie'));
                // Unset cookie after setting scroll position.
                $.removeCookie('myCookie');
                listenPageOnClickEvent();
                listenSearchOnClickEvent();
                listenSearchOnFocusEvent();
                mark();
            });

            function scrollTop() {
                setTimeout(
                        function() {
                            window.scroll(0, 0);
                            listenPageOnClickEvent();
                        }, 0);

            }

            // This function simply gets the window scroll position, works in all browsers.
            function getPageScroll() {
                var yScroll;
                if (self.pageYOffset) {
                    yScroll = self.pageYOffset;
                } //else if (document.documentElement document.documentElement.scrollTop) {
//                    yScroll = document.documentElement.scrollTop;
                //}
                else if (document.body) {
                    yScroll = document.body.scrollTop;
                }
                return yScroll;
            }

            function listenPageOnClickEvent() {
                // Make this class objects keep page scroll position.
                $('.myCustomLinkStyle').each(function() {
                    $(this).on('click', function() {
                        $.cookie('myCookie', getPageScroll());
                    });
                });
            }

            function listenSearchOnClickEvent() {
                $('.search-button-tiny').on("click", function () {
                    if ($('input[id$=search_hinput]').val().length >= 3) {
                        //$('input[id$=search_input]').trigger('keydown');
                        //$('input[id$=search_input]').trigger('input');
                        $('span[id$=search_panel] .ui-autocomplete-item:first-child').trigger('click');
                        //$('input[id$=search_input]').parent().trigger('click');
                    }
                    else {
                        return false;
                    }
                });
            }

            function listenOnClick() {
                $('.rightpanel-btn').trigger('click');
            }

            function listenSearchOnFocusEvent() {
                $('input[id$=search_input]').on("focus", function () {
                    $('html, body').animate({
                        scrollTop: offSet
                    }, 0);
                });
                $('input[id$=search_input]').on("blur", function () {
                    $('html, body').animate({
                        scrollTop: 0
                    }, 0);
                });
            }

            function initLoader() {
                //$('.loader').css("display","inline");
                //$('.search .fa').hide();
            }

            function haltLoader() {
                //$('.loader').css("display","none");
                //$('.search .fa').show();
            }

            function mark() {

                // Read the keyword
                var keyword =  $('input[id$=search_input]').val();

                // Determine selected options
                var options = {};
                $("input[name='opt[]']").each(function() {
                    options[$(this).val()] = $(this).is(":checked");
                });

                // Remove previous marked elements and mark
                // the new keyword inside the context
                $(".context").unmark({
                    done: function() {
                        $(".context").mark(keyword, options);
                    }
                });

                $("input[name='keyword']").on("input", mark);
                $("input[type='checkbox']").on("change", mark);

            }

            function focus() {
                $('.context').first().focus();
            }

            function focus2() {
                $('input[id$=search_input]').focus();
            }

        </script>

    </ui:define>

</ui:composition>

